{"version":3,"sources":["images/robot/face1.svg","images/robot/face_clr.svg","images/robot/face_clr2.svg","images/robot/face_clr3.svg","images/robot/face_clr4.svg","images/robot/body.svg","images/feature1.png","images/feature2.png","images/feature3.png","images/feature4.png","logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","tasknum","mode","page","answerClass","btnClass","robotFace","robot_head_gr","robot_head_clr","robot_head_clr2","robot_head_clr3","robot_head_clr4","facenum","headop","e","answer","target","getAttribute","classList","setState","setTimeout","bind","Chart","require","Doughnut","react_default","a","createElement","className","style","textAlign","src","chr1","key","href","onClick","selectAnswer","chr2","chr3","chr4","display","width","justifyContent","proceed","data","value","color","highlight","label","options","segmentShowStroke","segmentStrokeColor","segmentStrokeWidth","percentageInnerCutout","animationSteps","animationEasing","animateRotate","animateScale","height","id","opacity","robot_body","pageRender","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.80593981.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/face1.5633d805.svg\";","module.exports = __webpack_public_path__ + \"static/media/face_clr.539bfc54.svg\";","module.exports = __webpack_public_path__ + \"static/media/face_clr2.6600c902.svg\";","module.exports = __webpack_public_path__ + \"static/media/face_clr3.d0bb9fa8.svg\";","module.exports = __webpack_public_path__ + \"static/media/face_clr4.15859141.svg\";","module.exports = __webpack_public_path__ + \"static/media/body.905dab77.svg\";","module.exports = __webpack_public_path__ + \"static/media/feature1.204d1cfa.png\";","module.exports = __webpack_public_path__ + \"static/media/feature2.323dd919.png\";","module.exports = __webpack_public_path__ + \"static/media/feature3.ef145963.png\";","module.exports = __webpack_public_path__ + \"static/media/feature4.431e94cf.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport robot_head_gr from './images/robot/face1.svg'\nimport robot_head_clr from './images/robot/face_clr.svg'\nimport robot_head_clr2 from './images/robot/face_clr2.svg'\nimport robot_head_clr3 from './images/robot/face_clr3.svg'\nimport robot_head_clr4 from './images/robot/face_clr4.svg'\nimport robot_body from './images/robot/body.svg'\n\nimport chr1 from './images/feature1.png'\nimport chr2 from './images/feature2.png'\nimport chr3 from './images/feature3.png'\nimport chr4 from './images/feature4.png'\nimport './App.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasknum: 1,\n      mode: 0,\n\n      page: 0,\n      answerClass: [\"\",\"\",\"\",\"\"],\n      btnClass: \"\",\n      robotFace: [robot_head_gr, robot_head_clr, robot_head_clr2, robot_head_clr3, robot_head_clr4],\n      facenum: 0,\n      headop : 1,\n    }\n  }\n\n  selectAnswer(e) {\n    let answer = e.target.getAttribute(\"href\");\n    let classList = this.state.answerClass;\n    classList = [\"\",\"\",\"\",\"\"];\n    classList[answer] = \"selected\";\n    this.setState({answerClass: classList, btnClass: \"active\", page: answer});\n  }\n  proceed(){\n    this.setState({headop: 0.4});\n    setTimeout(function () { this.setState({headop:1, mode: 1, facenum: (this.state.page) * 1 + 1}) }.bind(this), 150)\n  }\n\n  pageRender(){\n    const Chart = require(\"react-chartjs\").Doughnut;\n    const chartOptions = {\n      //Boolean - Whether we should show a stroke on each segment\n      segmentShowStroke : true,\n    \n      //String - The colour of each segment stroke\n      segmentStrokeColor : \"#fff\",\n    \n      //Number - The width of each segment stroke\n      segmentStrokeWidth : 2,\n    \n      //Number - The percentage of the chart that we cut out of the middle\n      percentageInnerCutout : 50, // This is 0 for Pie charts\n    \n      //Number - Amount of animation steps\n      animationSteps : 50,\n    \n      //String - Animation easing effect\n      animationEasing : \"easeOutSine\",\n    \n      //Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate : true,\n    \n      //Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale : false,\n    }\n    const chartData = [\n      {\n        value: 100,\n        color:\"#C41E3A\",\n        highlight: \"#E54C6E\",\n        label: \"A\"\n      },\n      {\n        value: 50,\n        color: \"#FC6522\",\n        highlight: \"#FF945E\",\n        label: \"B\"\n      },\n      {\n        value: 200,\n        color: \"#FFCE00\",\n        highlight: \"#FFDF57\",\n        label: \"C\"\n      },\n      {\n        value: 80,\n        color: \"#EADB24\",\n        highlight: \"#E7E36D\",\n        label: \"D\"\n      }\n    ]\n\n    switch(this.state.mode){\n      case 0:\n      return  <div className = \"question\" style={{textAlign:\"left\"}}>\n      <div className = \"title\">Task {this.state.tasknum}/10</div>\n      <div className = \"subtitle\">Which feature visualization can represent “dog” the best?</div>\n      <div className = \"samples\">\n        <img src={chr1} key=\"0\" href=\"0\" className = {this.state.answerClass[0]} onClick={this.selectAnswer.bind(this)}/>\n        <img src={chr2} key=\"1\" href=\"1\" className = {this.state.answerClass[1]} onClick={this.selectAnswer.bind(this)}/>\n        <img src={chr3} key=\"2\" href=\"2\" className = {this.state.answerClass[2]} onClick={this.selectAnswer.bind(this)}/>\n        <img src={chr4} key=\"3\" href=\"3\" className = {this.state.answerClass[3]} onClick={this.selectAnswer.bind(this)}/>\n      </div>\n      <div style= {{display:\"flex\", width:\"512px\", justifyContent:\"flex-end\"}}>\n        <div className = {\"btn \" + this.state.btnClass} onClick={this.proceed.bind(this)}>Confirm</div>\n      </div>\n    </div>;\n    case 1: return <div className = \"question\" style={{textAlign:\"left\"}}>\n    <div className = \"title\">Task {this.state.tasknum}/10</div>\n      <div className = \"subtitle center\">Other people answered...</div>\n      <div className = \"chart\">\n    <Chart data={chartData} options={chartOptions} width=\"250\" height=\"250\"/>\n    </div>\n    </div>\n    }\n  }\n  render() {\n    \n    return (\n      <div className=\"App\" style={{width:\"100%\",height:\"100%\"}}>\n        <div  className = \"header\" >\n          <div className = \"left\">\n            <div id=\"cmu\">CMU</div>\n            <div className = \"title\">Robot Game</div>\n          </div>\n          <div  className = \"subtitle\">Interpretable Machine Learning Research Project</div>\n        </div>\n          \n        <div className = \"mainContent\">\n          <div className = \"robot_wrapper\">\n            <img id=\"head\" key=\"head\" style={{opacity: this.state.headop}} src={this.state.robotFace[this.state.facenum]} />\n            <img id=\"body\" src={robot_body}/>\n          </div>\n        {this.pageRender()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}