{"version":3,"sources":["images/robot/face1.svg","images/robot/face_clr.svg","images/robot/face_clr2.svg","images/robot/face_clr3.svg","images/robot/face_clr4.svg","images/robot/body.svg","images/feature1.png","images/feature2.png","images/feature3.png","images/feature4.png","logo.svg","radarchart.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Radar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","e","answer","target","getAttribute","classList","answerClass","setState","btnClass","page","btnactive","headop","setTimeout","mode","facenum","bind","RadarChart","require","config","react_default","a","createElement","className","style","textAlign","id","data","options","width","height","Component","App","tasknum","robotFace","robot_head_gr","robot_head_clr","robot_head_clr2","robot_head_clr3","robot_head_clr4","radarchart","type","labels","datasets","fillColor","strokeColor","pointColor","pointBackgroundColor","label","scale","ticks","beginAtZero","key","opacity","src","robot_body","pageRender","_this2","Chart","Doughnut","chr1","href","onClick","selectAnswer","chr2","chr3","chr4","display","justifyContent","proceed","value","color","highlight","segmentShowStroke","segmentStrokeColor","segmentStrokeWidth","percentageInnerCutout","animationSteps","animationEasing","animateRotate","animateScale","marginTop","ev","mainContentRender","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ddc9424.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/face1.5633d805.svg\";","module.exports = __webpack_public_path__ + \"static/media/face_clr.539bfc54.svg\";","module.exports = __webpack_public_path__ + \"static/media/face_clr2.6600c902.svg\";","module.exports = __webpack_public_path__ + \"static/media/face_clr3.d0bb9fa8.svg\";","module.exports = __webpack_public_path__ + \"static/media/face_clr4.15859141.svg\";","module.exports = __webpack_public_path__ + \"static/media/body.905dab77.svg\";","module.exports = __webpack_public_path__ + \"static/media/feature1.204d1cfa.png\";","module.exports = __webpack_public_path__ + \"static/media/feature2.323dd919.png\";","module.exports = __webpack_public_path__ + \"static/media/feature3.ef145963.png\";","module.exports = __webpack_public_path__ + \"static/media/feature4.431e94cf.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport robot_head_gr from './images/robot/face1.svg'\nimport robot_head_clr from './images/robot/face_clr.svg'\nimport robot_head_clr2 from './images/robot/face_clr2.svg'\nimport robot_head_clr3 from './images/robot/face_clr3.svg'\nimport robot_head_clr4 from './images/robot/face_clr4.svg'\nimport robot_body from './images/robot/body.svg'\n\nimport chr1 from './images/feature1.png'\nimport chr2 from './images/feature2.png'\nimport chr3 from './images/feature3.png'\nimport chr4 from './images/feature4.png'\nimport './App.scss';\n\nclass Radar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  selectAnswer(e) {\n    let answer = e.target.getAttribute(\"href\");\n    let classList = this.state.answerClass;\n    classList = [\"\", \"\", \"\", \"\"];\n    classList[answer] = \"selected\";\n    this.setState({ answerClass: classList, btnClass: \"active\", page: answer, btnactive: true, });\n  }\n  proceed() {\n    if (this.state.btnactive === true) {\n      this.setState({ headop: 0.4 });\n      setTimeout(function () { this.setState({ headop: 1, mode: 1, facenum: (this.state.page) * 1 + 1 }) }.bind(this), 150)\n    }\n  }\n  render() {\n    const RadarChart = require(\"react-chartjs\").Radar; \n    const config = this.props.config;\n    return (\n      <div>\n          <div className=\"question\" style={{ textAlign: \"left\" }}>\n          <RadarChart id=\"myChart\" data={config.data} options={config.options} width=\"300\" height=\"300\" />\n         \n          </div>\n        </div>\n    );\n  }\n}\n\nexport default Radar;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport Radar from './radarchart.js'\nimport robot_head_gr from './images/robot/face1.svg'\nimport robot_head_clr from './images/robot/face_clr.svg'\nimport robot_head_clr2 from './images/robot/face_clr2.svg'\nimport robot_head_clr3 from './images/robot/face_clr3.svg'\nimport robot_head_clr4 from './images/robot/face_clr4.svg'\nimport robot_body from './images/robot/body.svg'\n\nimport chr1 from './images/feature1.png'\nimport chr2 from './images/feature2.png'\nimport chr3 from './images/feature3.png'\nimport chr4 from './images/feature4.png'\nimport './App.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasknum: 1,\n      mode: 0,\n\n      page: 0,\n      answerClass: [\"\", \"\", \"\", \"\"],\n      btnClass: \"\",\n      btnactive: false,\n\n      robotFace: [robot_head_gr, robot_head_clr, robot_head_clr2, robot_head_clr3, robot_head_clr4],\n      facenum: 0,\n      headop: 1,\n    }\n  }\n\n  selectAnswer(e) {\n    let answer = e.target.getAttribute(\"href\");\n    let classList = this.state.answerClass;\n    classList = [\"\", \"\", \"\", \"\"];\n    classList[answer] = \"selected\";\n    this.setState({ answerClass: classList, btnClass: \"active\", page: answer, btnactive: true, });\n  }\n  proceed() {\n    if (this.state.btnactive === true) {\n      this.setState({ headop: 0.4 });\n      setTimeout(function () { this.setState({ headop: 1, mode: 1, facenum: (this.state.page) * 1 + 1 }) }.bind(this), 150)\n    }\n  }\n  mainContentRender() {\n    const config_robot = {\n      type: \"radar\",\n    data: {\n    labels: [\"\", \"\", \"\", \"\", \"\"],\n    datasets: [\n      {\n        fillColor: \"rgba(196, 30, 58, 0.3)\",\n        strokeColor: \"rgba(196, 30, 58, 1)\",\n        pointColor: \"rgba(196, 30, 58, 1)\",\n        pointBackgroundColor: \"rgba(196, 30, 58, 0.1)\",\n        label: \"\",\n        data: [20, 10, 4, 6, 14]\n      },\n      {\n        fillColor: \"rgba(98, 185, 186, 0.3)\",\n        strokeColor: \"rgba(98, 185, 186, 1)\",\n        pointColor: \"rgba(98, 185, 186, 1)\",\n        pointBackgroundColor: \"rgba(98, 185, 186, 0.1)\",\n        label: \"\",\n        data: [10, 16, 14, 16, 12]\n      }]\n    },\n    options:{\n      scale: {\n        ticks: {\n          beginAtZero: true\n        }\n      }\n\n    }}; \n    const config_human = {\n      type: \"radar\",\n    data: {\n    labels: [\"\", \"\", \"\", \"\", \"\"],\n    datasets: [\n      {\n        fillColor: \"rgba(196, 30, 58, 0.3)\",\n        strokeColor: \"rgba(196, 30, 58, 1)\",\n        pointColor: \"rgba(196, 30, 58, 1)\",\n        pointBackgroundColor: \"rgba(196, 30, 58, 0.1)\",\n        label: \"\",\n        data: [20, 10, 4, 6, 14]\n      },\n      {\n        fillColor: \"rgba(234, 219, 36, 0.3)\",\n        strokeColor: \"rgba(234, 219, 36, 1)\",\n        pointColor: \"rgba(234, 219, 36, 1)\",\n        pointBackgroundColor: \"rgba(234, 219, 36, 0.1)\",\n        label: \"\",\n        data: [16, 5, 14, 18, 7]\n      }]\n    },\n    options:{\n      scale: {\n        ticks: {\n          beginAtZero: true\n        }\n      }\n\n    }}; \n    \n    switch (this.state.mode) {\n      case 3:\n        return  <div className=\"mainContent\">\n          <div className = \"chartwrap\">\n            <div className = \"title\">You’re 73% Robot</div>\n            <Radar config = {config_robot}/>\n          </div>\n          <div className = \"chartwrap\">\n            <div className = \"title\">You’re 58% Representative for human</div>\n            <Radar config = {config_human}/>\n          </div>\n        </div>\n      default: return <div className=\"mainContent\">\n        <div className=\"robot_wrapper\">\n          <img id=\"head\" key=\"head\" style={{ opacity: this.state.headop }} src={this.state.robotFace[this.state.facenum]} />\n          <img id=\"body\" src={robot_body} />\n        </div>\n        {this.pageRender()}\n      </div>\n    }\n  }\n  pageRender() {\n    const Chart = require(\"react-chartjs\").Doughnut;\n    const chartOptions = {\n      //Boolean - Whether we should show a stroke on each segment\n      segmentShowStroke: true,\n\n      //String - The colour of each segment stroke\n      segmentStrokeColor: \"#fff\",\n\n      //Number - The width of each segment stroke\n      segmentStrokeWidth: 2,\n\n      //Number - The percentage of the chart that we cut out of the middle\n      percentageInnerCutout: 50, // This is 0 for Pie charts\n\n      //Number - Amount of animation steps\n      animationSteps: 50,\n\n      //String - Animation easing effect\n      animationEasing: \"easeOutSine\",\n\n      //Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n\n      //Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false,\n    }\n    const chartData = [\n      {\n        value: 30,\n        color: \"#C41E3A\",\n        highlight: \"#E54C6E\",\n        label: \"A\"\n      },\n      {\n        value: 10,\n        color: \"#FC6522\",\n        highlight: \"#FF945E\",\n        label: \"B\"\n      },\n      {\n        value: 50,\n        color: \"#FFCE00\",\n        highlight: \"#FFDF57\",\n        label: \"C\"\n      },\n      {\n        value: 20,\n        color: \"#EADB24\",\n        highlight: \"#E7E36D\",\n        label: \"D\"\n      }\n    ]\n\n    switch (this.state.mode) {\n      case 0:\n        return <div className=\"question\" style={{ textAlign: \"left\" }}>\n          <div className=\"title\">Task {this.state.tasknum}/10</div>\n          <div className=\"subtitle\">Which feature visualization can represent “dog” the best?</div>\n          <div className=\"samples\">\n            <img src={chr1} key=\"0\" href=\"0\" className={this.state.answerClass[0]} onClick={this.selectAnswer.bind(this)} />\n            <img src={chr2} key=\"1\" href=\"1\" className={this.state.answerClass[1]} onClick={this.selectAnswer.bind(this)} />\n            <img src={chr3} key=\"2\" href=\"2\" className={this.state.answerClass[2]} onClick={this.selectAnswer.bind(this)} />\n            <img src={chr4} key=\"3\" href=\"3\" className={this.state.answerClass[3]} onClick={this.selectAnswer.bind(this)} />\n          </div>\n          <div style={{ display: \"flex\", width: \"512px\", justifyContent: \"flex-end\" }}>\n            <div className={\"btn \" + this.state.btnClass} onClick={this.proceed.bind(this)}>Confirm</div>\n          </div>\n        </div>;\n      case 1: return <div className=\"question\" style={{ textAlign: \"left\" }}>\n        <div className=\"title\">Task {this.state.tasknum}/10</div>\n        <div className=\"subtitle center\">Other people answered...</div>\n        <div className=\"chart\">\n          <Chart data={chartData} options={chartOptions} width=\"250\" height=\"250\" />\n        </div>\n        <div style={{ display: \"flex\", width: \"512px\", marginTop: \"60px\", justifyContent: \"flex-end\" }}>\n          <div className={\"btn active\"} onClick={(ev) => this.setState({ mode: 3 })}>Next</div>\n        </div>\n      </div>;\n    }\n  }\n  render() {\n\n    return (\n      <div className=\"App\" style={{ width: \"100%\", height: \"100%\" }}>\n        <div className=\"header\" >\n          <div className=\"left\">\n            <div id=\"cmu\">CMU</div>\n            <div className=\"title\">Robot Game</div>\n          </div>\n          <div className=\"subtitle\">Interpretable Machine Learning Research Project</div>\n        </div>\n        {this.mainContentRender()}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}